version: '3.8'

services:

  node-app:
    container_name: node-app
    env_file:
      - ../.env
    depends_on:
      - mongodb
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - 3000:3000
    networks:
      - app-network

  mongodb:
    container_name: mongodb
    command: ["mongod", "--auth"]
    image: mongo:latest
    ports:
      - 27017:27017
    env_file:
      - ../.env
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
     - 80:80
     # A utiliser uniquement en SSL
     # - 443:443
    volumes:
     - ../nginx.conf:/var/nginx/nginx.conf
    networks:
     - app-network

  postgresql:
    container_name: postgresql
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - ../.env
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app-network

  redis-cache:
    container_name: redis_cache
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb-data:
    driver: local
  postgresql-data:
    driver: local
  